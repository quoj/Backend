package com.example.api.service;

import com.example.api.model.Message;
import com.example.api.repository.MessageRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.List;

@Service
public class MessageService {

    @Autowired
    private MessageRepository messageRepository;

    // üîπ L·∫•y t·∫•t c·∫£ tin nh·∫Øn
    public List<Message> getAllMessages() {
        return messageRepository.findAll();
    }

    // üîπ L·∫•y tin nh·∫Øn theo ID
    public Message getMessageById(Long id) {
        return messageRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn v·ªõi ID: " + id));
    }

    // üîπ L·∫•y tin nh·∫Øn theo ng∆∞·ªùi nh·∫≠n
    public List<Message> getMessagesByReceiver(Long receiverId) {
        return messageRepository.findByReceiverId(receiverId);
    }

    // üîπ L·∫•y tin nh·∫Øn theo ng∆∞·ªùi g·ª≠i
    public List<Message> getMessagesBySender(Long senderId) {
        return messageRepository.findBySenderId(senderId);
    }

    // üîπ L·∫•y tin nh·∫Øn theo tr·∫°ng th√°i (Ch∆∞a x√°c nh·∫≠n / ƒê√£ x√°c nh·∫≠n)
    public List<Message> getMessagesByStatus(String status) {
        return messageRepository.findByStatus(status);
    }

    // üîπ Th√™m tin nh·∫Øn m·ªõi
    public Message createMessage(Message message) {
        message.setId(null); // ‚úÖ B·∫Øt bu·ªôc ƒë·ªÉ tr√°nh l·ªói khi g·ª≠i ID t·ª´ client
        message.setCreatedAt(LocalDateTime.now()); // G√°n th·ªùi gian t·∫°o tin nh·∫Øn
        message.setStatus("Ch∆∞a x√°c nh·∫≠n"); // M·∫∑c ƒë·ªãnh l√† ch∆∞a x√°c nh·∫≠n
        return messageRepository.save(message);
    }

    // üîπ C·∫≠p nh·∫≠t n·ªôi dung ho·∫∑c ·∫£nh c·ªßa tin nh·∫Øn
    public Message updateMessage(Long id, Message updatedMessage) {
        return messageRepository.findById(id).map(message -> {
            message.setContent(updatedMessage.getContent());
            message.setImagePath(updatedMessage.getImagePath());
            message.setStatus(updatedMessage.getStatus());
            return messageRepository.save(message);
        }).orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn v·ªõi ID: " + id));
    }

    // üîπ C·∫≠p nh·∫≠t tr·∫°ng th√°i tin nh·∫Øn (ƒê√£ x√°c nh·∫≠n / Ch∆∞a x√°c nh·∫≠n)
    public Message updateMessageStatus(Long id, boolean confirmed) {
        return messageRepository.findById(id).map(message -> {
            message.setStatus(confirmed ? "ƒê√£ x√°c nh·∫≠n" : "Ch∆∞a x√°c nh·∫≠n");
            return messageRepository.save(message);
        }).orElseThrow(() -> new RuntimeException("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn v·ªõi ID: " + id));
    }

    // üîπ X√≥a tin nh·∫Øn
    public void deleteMessage(Long id) {
        if (!messageRepository.existsById(id)) {
            throw new RuntimeException("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn ƒë·ªÉ x√≥a v·ªõi ID: " + id);
        }
        messageRepository.deleteById(id);
    }
}
